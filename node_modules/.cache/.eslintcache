[{"/Users/Omar/Desktop/react-projects/Cryptobase/crypto-project/src/index.js":"1","/Users/Omar/Desktop/react-projects/Cryptobase/crypto-project/src/App.js":"2","/Users/Omar/Desktop/react-projects/Cryptobase/crypto-project/src/context/ThemeContext.jsx":"3","/Users/Omar/Desktop/react-projects/Cryptobase/crypto-project/src/components/Navbar.jsx":"4"},{"size":300,"mtime":1658173852241,"results":"5","hashOfConfig":"6"},{"size":246,"mtime":1658175270830,"results":"7","hashOfConfig":"6"},{"size":1156,"mtime":1658175301969,"results":"8","hashOfConfig":"6"},{"size":110,"mtime":1658175472371,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"n14o6w",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Omar/Desktop/react-projects/Cryptobase/crypto-project/src/index.js",[],[],[],"/Users/Omar/Desktop/react-projects/Cryptobase/crypto-project/src/App.js",[],[],[],"/Users/Omar/Desktop/react-projects/Cryptobase/crypto-project/src/context/ThemeContext.jsx",["25"],[],"import React,{useState,useEffect,createContext} from 'react'\n\nconst getInitialTheme=()=>{\n    if(typeof window !== 'underfined' && window.localStorage){\n        const storedPrefs = window.localStorage.getItem('color-theme')\n        if(typeof storedPrefs==='string'){\n            return storedPrefs\n        }\n        const userMedia = window.matchMedia('(prefers-color-scheme: dark)')\n        if(userMedia.matches){\n            return 'dark'\n        }\n    }\n    return 'light' \n}\n\nexport const ThemeContext = createContext()\n\nexport const ThemeProvider = ({initialTheme, children}) =>{\n   const [theme, setTheme] = useState(getInitialTheme)\n   const rawSetTheme = (theme) =>{\n       const root =window.document.documentElement;\n       const isDark = theme ==='dark'\n\n       root.classList.remove(isDark ? 'light' : 'dark')\n       root.classList.add(theme)\n\n       localStorage.setItem('color-theme',theme)\n   }\n   if(initialTheme){\n       rawSetTheme(initialTheme)\n   }\n   useEffect(()=>{\n       rawSetTheme(theme)\n   },[theme])\n   return (\n       <ThemeContext.Provider value={{theme,setTheme}}>\n           {children}\n       </ThemeContext.Provider>\n   )\n}","/Users/Omar/Desktop/react-projects/Cryptobase/crypto-project/src/components/Navbar.jsx",[],[],{"ruleId":"26","severity":1,"message":"27","line":4,"column":26,"nodeType":"28","messageId":"29","endLine":4,"endColumn":38},"valid-typeof","Invalid typeof comparison value.","Literal","invalidValue"]